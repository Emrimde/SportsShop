@using SportsShop.UI.ViewModels
@using SportsShop.Core.ServiceContracts.DTO.CartItemDto
@model CheckoutViewModel
@{
    ViewBag.Title = "Checkout";
}

<div class="container py-4" style="max-width:1200px;">

    @if (TempData["ErrorInformation"] != null)
    {
        <p class="alert alert-danger">@TempData["ErrorInformation"]; </p>
    }
    <form id="orderForm" asp-action="PlaceOrder" asp-controller="Order" method="post">
        <div class="row">
            <div class="col-md-8">
                <h2 class="mb-3 fw-bold" style="color: #333;">Delivery</h2>
                <p class="text-muted" style="font-size: 0.9rem;">
                    Free shipping from $300. If your order is at least $70, shipping can also be discounted.
                </p>
                <div class="mb-4">
                    <label for="countrySelect" class="form-label fw-semibold" style="color: #333;">Select Address</label>
                    <select asp-for="AddressId" class="form-select" id="countrySelect">
                        <option value="" disabled selected>Select your address</option>
                        @if (Model.Addresses.Count == 0)
                        {
                            <option value="-1">Add new address</option>
                        }
                        else
                        {
                            @foreach (var address in Model.Addresses)
                            {
                                <option value="@address.Id">@address.City/@address.Street</option>
                            }
                            <option value="-1">Add new address</option>
                        }
                    </select>
                </div>

                <!-- Hidden form -->
                <div id="addressForm" style="display: none; margin-top: 20px;">
                    <div class="row">
                        <div class="col-md-6 mb-3">
                            <label asp-for="@Model.Address.CountryId" class="form-label"></label>
                            <input class="form-control" name="addressAddRequest.CountryId" placeholder="Enter country" />
                            <span asp-validation-for="@Model.Address.City " class="text-danger"></span>
                        </div>
                        <div class="col-md-6 mb-3">
                            <label asp-for="@Model.Address.City" class="form-label"></label>
                            <input name="addressAddRequest.City" class="form-control" placeholder="Enter city" />
                            <span asp-validation-for="@Model.Address.City" class="text-danger"></span>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-6 mb-3">
                            <label asp-for="@Model.Address.Street" class="form-label"></label>
                            <input name="addressAddRequest.Street" class="form-control" placeholder="Enter street" />
                            <span asp-validation-for="@Model.Address.Street" class="text-danger"></span>
                        </div>
                        <div class="col-md-6 mb-3">
                            <label asp-for="@Model.Address.ZipCode" class="form-label"></label>
                            <input name="addressAddRequest.ZipCode" class="form-control" placeholder="Enter zip-code" />
                            <span asp-validation-for="@Model.Address.ZipCode" class="text-danger"></span>
                        </div>
                    </div>
                </div>

                <div class="mb-4">
                    <h5 class="fw-bold" style="color: #333;">Shipping Methods</h5>
                        <select asp-for="SupplierId" asp-items="Model.Supplierss" id="selectSupplier" class="form-select">
                            <option value="">Select Supplier</option>
                        </select>
                </div>

                <div class="mb-4">
                    <h5 class="fw-bold" style="color: #333;">Payment</h5>
                    <div class="form-check">
                        <input class="form-check-input" type="radio" name="paymentMethod" id="paymentMethod2">
                        <label class="form-check-label" for="paymentMethod2" style="color: #333;">
                            Blik
                        </label>
                    </div>
                </div>
            </div>

            <div class="col-md-4">
                <div class="border p-3" style="background-color: #f9f9f9; border-radius:4px;">
                    <h3 class="fw-bold mb-4" style="color: #333;">Your Cart</h3>

                    @foreach (CartItemResponse cartItem in Model.CartItems)
                    {
                        <div class="d-flex justify-content-between align-items-center mb-2">
                            <div><span style="color: #333;">@cartItem.ProductName</span></div>
                            <span style="color: #333;">$@cartItem.Price</span>
                            <span style="color: #333;">Quantity: @cartItem.Quantity</span>
                        </div>
                    }
                    <hr>

                    <div class="d-flex justify-content-between align-items-center">
                        <span style="color: #333;">Subtotal</span>
                        <span style="color: #333;" id="itemsPrice">@Model.ItemsPrice</span>
                    </div>
                    <div class="d-flex justify-content-between align-items-center">
                        <span style="color: #333;">Shipping</span>
                        <span id="shippingcost" style="color: #333;"></span>
                    </div>
                    <hr>

                    <div class="d-flex justify-content-end align-items-center mb-3 fw-bold">
                        <span style="color: #333;">Total</span>
                        <span style="color: #333;" id="totalCost"></span> <span>$</span>
                    </div>
                    <button class="btn w-100" style="background-color: #FFC107; color: #333; font-weight:600;">
                        Place Order
                    </button>
                    <input type="hidden" name="itemsPrice" id="itemsPriceHidden" value="" />
                    <input type="hidden" name="ShippingCost" id="shippingCostHidden" value="" />
                    <input type="hidden" name="TotalCost" id="totalCostHidden" value="" />
                </div>
            </div>
        </div>
    </form>

</div>
<script>
       function updateTotal() {
            const items    = +document.getElementById("itemsPrice").innerText;
            const shipping = +document.getElementById("shippingcost").innerText;
            document.getElementById("totalCost").innerText = items + shipping;
            document.getElementById("shippingCostHidden").value = shipping.toFixed(2);
            document.getElementById("totalCostHidden").value    = total.toFixed(2);
    }

    document.getElementById('countrySelect').addEventListener('change', function() {
        var selectedValue = this.value;
        var addressForm = document.getElementById('addressForm');
        if (selectedValue === "-1") {
            addressForm.style.display = 'block';
        } else {
            addressForm.style.display = 'none';
        }
    });
    selectSupplier = document.getElementById('selectSupplier');
    selectSupplier.addEventListener('change', function (){
            const supplierId = this.value;
            fetch(`/Cart/GetShippingCost?supplierId=${supplierId}`)
            .then(response => response.json())
            .then(data => {
                document.getElementById("shippingcost").innerText = `${data.price}`;
                    console.log(
      'items:',    JSON.stringify(document.getElementById("itemsPrice").innerText),
      'shipping:', JSON.stringify(document.getElementById("shippingcost").innerText)
    );
               updateTotal();
            });
    });

    document.getElementById("totalCost").innerText = document.getElementById("shippingCost").innerText + document.getElementById("itemsPrice").innerText;

        document.getElementById("orderForm")
      .addEventListener("submit", function(e) {
        updateTotal();
        // dalej formularz pójdzie normalnie – dzięki hidden fieldom ASP.NET zbierze wartości
    });
</script>



